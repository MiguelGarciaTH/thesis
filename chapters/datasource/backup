


\subsection*{Vulnerability Distribution by OS Component}\label{vulntypes}

Nowadays, when users acquire or download an operating system, they get a kernel implementing the fundamental \gls{os} functionality but also a number of other software components. 
After the initial installation, users may reconfigure the machine to their needs, for instance by removing application packages that are unnecessary and/or by including device drivers to support new hardware. 
This customization is also advisable from a security standpoint, with a few different baseline \gls{os} installations created for machines with distinct roles within an organization. 
For example, a network server \gls{os} installation should be stripped of most applications to minimize the attack surface and reduce the risk of intrusion. 
Therefore, besides understanding how vulnerabilities affect the various \gls{os} products, it is also important to know what parts of these systems are compromised by the vulnerabilities. 
In \gls{nvd}, an \emph{\gls{os} product} is composed by the kernel, device drivers, optional modules, system software and applications. 
Since \gls{nvd} does not have a specific field identifying the affected component except for the vulnerability description, we inspected the entries manually and classified each vulnerability in one of four categories: \textit{Driver, Kernel, System Software} and \textit{Application}. %The rationale for this classification is the %following:
The classification criteria are the following:

\begin{itemize}

\item \textbf{Kernel:} vulnerabilities in the TCP/IP stack (and other network protocols implemented in the \gls{os}), file system, process and task management, core libraries and modules related to the CPU architecture;

\item \textbf{Driver:} vulnerabilities in drivers for the devices that might be connected to the machine (for example, wireless/wired network cards, video/graphic cards, web cams, audio cards, plug and play devices);

\item \textbf{System Software:} vulnerabilities in software providing common \gls{os} functionalities such as login, shells and basic daemons (e.g., DNS, telnet, lpd). In this class, we only account for software that comes by default with the distribution (although sometimes it is possible to uninstall these components without affecting the main OS operation);

\item \textbf{Application:} vulnerabilities in software that comes with the \gls{os} but that is not needed for basic operation, and in some cases requires specific installation. For example, database management systems, messaging clients, text editors and processors, web/email/FTP clients and servers, music/video players, programming languages (compilers and virtual machines), security packages (antivirus and authentication solutions), and games.
\end{itemize}


Table~\ref{tab:classification} summarizes the result of the analysis of the 2270 vulnerability descriptions, which were then assigned to one of the \gls{os} component classes. 
The table shows that, with the exception of \textit{Drivers}, all \gls{os} products have a reasonable number of vulnerabilities in each class.  
Therefore, this confirms the intuition that there are security gains if certain software components can be removed from the \gls{os} distributions. 
In the BSD and Solaris families, vulnerabilities appear in high numbers in the \textit{Kernel} part, while in the Linux and Windows families, the \textit{Applications} vulnerabilities are more prevalent. 
This can be explained by noticing that Windows and Linux default distributions usually contain more pre-installed applications when compared to BSD/Solaris. 
Therefore, the number of \textit{Applications} vulnerabilities in Windows and Linux have higher reported values -- there is the expectation that users will not install most of the applications missing from  the default distributions, and thus their vulnerabilities not appear in the \gls{os} statistics.



%TABLE 2
\begin{table}[!ht]
\begin{center}
{\scriptsize
\begin{tabular}{|l||c|c|c|c||c|}\hline
\textbf{OS} & \textbf{Driver} & \textbf{Kernel} & \textbf{Sys. Soft.} & \textbf{Application} & \textbf{Total}  \\ \hline\hline
OpenBSD 			& 2	 	& 76 		& 37 	& 38 	& 153 \\ %\hline
NetBSD			 	& 9 	& 64 		& 39 	& 31 	& 143 \\ %\hline
FreeBSD 			& 4 	& 153 	& 61	& 61 	& 279 \\ %\hline
OpenSolaris 	& 0 	& 15 		& 9 	& 7 	& 31\\ %\hline
Solaris 			& 2		& 155		& 120	& 149 & 426\\ %\hline
Debian 			& 1 	& 25 		& 39 	& 148 & 213 \\ %\hline
Ubuntu 			& 2 	& 22 		& 8 	& 58 	& 90 	\\ %\hline
Red Hat 			& 5 	& 94  	& 108 & 237 & 444 \\ %\hline
Windows2000     & 3 	& 146	 	& 135 & 211 & 495 \\
Windows2003     & 2 	& 171 	& 96 & 291 & 560 \\
Windows2008     & 0 	& 123 	& 36	& 175	& 334 \\  \hline\hline
\textbf{\% Total} 	& 1.0\% & 33.5\% & 22.5\% & 42.9\% &  \\  \hline
% driver 23 kernel 761 prim soft 511 app 975
%total 2270
\end{tabular}
\caption{Vulnerabilities per OS component class.}
\label{tab:classification}
}
\end{center}
\end{table}

The last row of the table presents the percentage of each class on the total data set. 
One can observe that most vulnerabilities occur in the Application and Kernel components, which is then followed by the System Software group of utility programs. 
It is interesting to notice that Drivers have a very small percentage of the published \gls{os} vulnerabilities. 
This result is somewhat surprising because device drivers account for a large fraction of \gls{os} code~\cite{Chou:2001}, and since they are typically hard to develop, one would expect that they would contain a large number of programming flaws. In fact, previous studies have demonstrated that drivers are the major cause for crashes in certain \glspl{os}~\cite{Ganapathi:2006}. 
One, however, should keep in mind that software bugs do not necessarily translate into security vulnerabilities, which are the kind of flaw reported in the \gls{nvd}. 
In order to become vulnerabilities, the adversary has to be able to force the conditions to activate the bugs, which for device drivers can be extremely difficult because they are related to specific low-level aspects of the system.


Table~\ref{tab:class-pairs} shows which parts of the \gls{os} are affected by common vulnerabilities in an Isolated Thin Server configuration, considering only the \gls{os} pairs with non-zero common vulnerabilities. 
The fact that there are many shared \textit{Kernel} and \textit{System Software} vulnerabilities between Windows2000 and Windows2003 indicates that the latter inherits considerable parts of the \gls{os} from its predecessor. 
This same trend is also observed between Windows2008 and Windows2003/Windows2000, although to a less extent. 
Interestingly, no single vulnerable driver is present in all products, which can be explained by the very few faulty drivers that are reported.

%Table 4
\begin{table}[!ht]
\begin{center}
{\scriptsize
\begin{tabular}{|l||c|c|c||c|}\hline
OS Pairs & \emph{Driver} & \emph{Kernel} & \emph{Sys. Soft.} & \emph{Total}\\\hline\hline
Win2000-Win2003 &  0 & 42 & 43 & 85 \\\hline
Win2003-Win2008 &  0 & 18 & 22 & 40  \\\hline
OpenBSD-FreeBSD &  1 & 14  &  18 & 33  \\\hline
NetBSD-FreeBSD &  2 & 13 & 10 & 25  \\\hline
OpenBSD-NetBSD  & 1 & 8 & 8 & 17\\\hline
Win2000-Win2008 &  0 & 8 & 8 & 16  \\\hline
Debian-Red Hat &  0 & 5 & 8 & 13  \\\hline
NetBSD-Solaris &  0 & 4 & 6 & 10  \\\hline
FreeBSD-Solaris &  0 & 5 & 3 & 8  \\\hline
OpenSolaris-Solaris &  0 & 3 & 3 & 6  \\\hline
OpenBSD-Solaris  &  0 & 5 & 1 & 6  \\\hline
Solaris-Red Hat &  0 & 3 & 3 & 6  \\\hline
NetBSD-Red Hat &  0 & 0 & 6 & 6  \\\hline
FreeBSD-Red Hat &  0 & 1 & 4 & 5 \\\hline
OpenBSD-Red Hat &  0 & 1 &  3 & 4  \\\hline
NetBSD-Debian &  0 & 0 & 4 & 4  \\\hline
FreeBSD-Win2000 &  1 & 3 & 0 & 4  \\\hline
OpenBSD-Win2000 &  0 & 3 &  0 & 3  \\\hline
NetBSD-Win2000 &  1 & 2 & 0 & 3  \\\hline
Solaris-Win2000 &  0 & 3 & 0 & 3  \\\hline
OpenBSD-Win2003 &  0 & 2 & 0 & 2  \\\hline
FreeBSD-Win2003 &  0 & 2 & 0 & 2  \\\hline
Solaris-Debian &  0 & 1 & 1 & 2  \\\hline
Debian-Ubuntu &  0 & 0 & 2 & 2  \\\hline
NetBSD-Win2003 &  0 & 1 & 0 & 1  \\\hline
NetBSD-Win2008 &  0 & 1 & 0 & 1  \\\hline
FreeBSD-Debian &  0 & 0 & 1 & 1 \\\hline
FreeBSD-Win2008 &  0 & 1 & 0 & 1  \\\hline
Debian-Win2000 &  0 & 0 & 1 & 1  \\\hline
Ubuntu-Red Hat &  0 & 0 & 1 & 1  \\\hline
Ubuntu-Win2000 &  0 & 0 & 1 & 1  \\\hline
Red Hat-Win2000 &  0 & 0 & 1 & 1  \\\hline
OpenBSD-Win2008 &  0 & 1 & 0 & 1  \\\hline
Solaris-Win2003 &  0 & 1 & 0 & 1  \\\hline
Debian-Win2003 &  0 & 0 & 1 & 1  \\\hline
Ubuntu-Win2003 &  0 & 0 & 1 & 1  \\\hline
Red Hat-Win2003 &  0 & 0 & 1 & 1  \\\hline
\end{tabular}
\caption{Common vulnerabilities on Isolated Thin Servers (only OS pairs with non-zero shared flaws).}
\label{tab:class-pairs}
}
\end{center}
\end{table}

The second \gls{os} family with more common vulnerabilities is BSD, which also reuses several \gls{os} components. 
Here, a few vulnerabilities were found in device drivers that appear in more than one \gls{os} pair. 
A somewhat surprising result is the fact that most Linux distributions have much less shared flaws than we anticipated. 
We inspected the vulnerabilities manually in order to find an explanation, and we discovered that Linux distributions customize both their kernel and system software, and thus the vulnerabilities are less common. 
Another interesting point about \glspl{os} from the Linux family is that they have an almost negligible number of driver vulnerabilities (see Table \ref{tab:classification}), and none of them appears in more than one \gls{os}.


OpenSolaris is an open source \gls{os} based on Solaris that was released in 2008, and until this moment the two \glspl{os} only share a small number of vulnerabilities.



Table~\ref{tab:vulns} shows the vulnerabilities that were found in common for every combination of \gls{os} pair.
In all cases, the number of shared vulnerabilities between two \glspl{os} is substantially reduced when compared to the overall set of vulnerabilities. 
Even considering a Fat Server configuration, it is possible to find out \gls{os} pairs that do not have common flaws (e.g., NetBSD-Ubuntu), and \gls{os} families that share very few vulnerabilities (e.g., BSD and Windows). 
As expected, \glspl{os} from the same family have more common vulnerabilities due to the software components and applications that are reused (e.g., Debian-Red Hat or Windows2000-Windows2003). 
The Thin Server when compared with the Fat Server shows improvements in several \gls{os} pairs, but often there are still a few shared flaws. 
In contrast, the use of an Isolated Thin Server has a much stronger impact on security because it substantially diminishes the number of common vulnerabilities -- the number of pairs with zero vulnerabilities goes from 11 to 21. 
Overall, this means that a significant portion of common vulnerabilities are local (i.e., cannot be exploited remotely) and/or come from applications that are available in both \glspl{os}.

%TABLE III
\begin{table*}[!ht]
\begin{center}
{\scriptsize
\begin{tabular}{|l|| c c c| c c c| c c c| }%\hline

 \multicolumn{1}{c}{\textbf{Operating Systems}} &
 \multicolumn{3}{c}{\textbf{Fat Server}} &
 \multicolumn{3}{c}{\textbf{Thin Server}} &
 \multicolumn{3}{c}{\textbf{Isolated Thin Server}} \\
\hline
Pairs (A-B) & $\mathit{v}(A)$ & $\mathit{v}(B)$ & $\mathit{v}(A,B)$ & $\mathit{v}(A)$ & $\mathit{v}(B)$ & $\mathit{v}(A,B)$& $\mathit{v}(A)$ & $\mathit{v}(B)$ & $\mathit{v}(A,B)$\\\hline\hline
OpenBSD-NetBSD & 153 & 143 & 45 & 115 & 112 & 34 & 62 & 46 & 17\\
OpenBSD-FreeBSD & & 279 & 57 & & 218 & 49 & & 90 & 33\\
OpenBSD-OpenSolaris & & 31 & 1 & & 24 & 1 & & 6 & 0\\
OpenBSD-Solaris & & 426 & 13 & & 277 & 10 & & 108 & 6\\
OpenBSD-Debian & & 213 & 2 & & 65 & 2 & & 28 & 0\\
OpenBSD-Ubuntu & & 90 & 3 & & 32 & 1 & & 10 & 0\\
OpenBSD-Red Hat & & 444 & 11 & & 207 & 6 & & 69 & 4\\
OpenBSD-Win2000 & & 495 & 3 & & 284 & 3 & & 183 & 3\\
OpenBSD-Win2003 & & 560 & 2 & & 269 & 2 & & 138 & 2\\
OpenBSD-Win2008 & & 334 & 1 & & 159 & 1 & & 56 & 1\\ \hline
NetBSD-FreeBSD & 143 & 279 & 54 & 112 & 218 & 41 & 46 & 90 & 25\\
NetBSD-OpenSolaris & & 31 & 0 & & 24 & 0 & & 6 & 0\\
NetBSD-Solaris & & 426 & 18 & & 277 & 14 & & 108 & 10\\
NetBSD-Debian & & 213 & 5 & & 65 & 4 & & 28 & 4\\
NetBSD-Ubuntu & & 90 & 0 & & 32 & 0 & & 10 & 0\\
NetBSD-Red Hat & & 444 & 12 & & 207 & 9 & & 69 & 6\\
NetBSD-Win2000 & & 495 & 3 & & 284 & 3 & & 183 & 3\\
NetBSD-Win2003 & & 560 & 1 & & 269 & 1 & & 138 & 1\\
NetBSD-Win2008 & & 334 & 1 & & 159 & 1 & & 56 & 1\\ \hline
FreeBSD-OpenSolaris & 279 & 31 & 0 & 218 & 24 & 0 & 90 & 6 & 0\\
FreeBSD-Solaris & & 426 & 23 & & 277 & 15 & & 108 & 8\\
FreeBSD-Debian & & 213 & 7 & & 65 & 4 & & 28 & 1\\
FreeBSD-Ubuntu & & 90 & 3 & & 32 & 3 & & 10 & 0\\
FreeBSD-Red Hat & & 444 & 20 & & 207 & 13 & & 69 & 5\\
FreeBSD-Win2000 & & 495 & 4 & & 284 & 4 & & 183 & 4\\
FreeBSD-Win2003 & & 560 & 2 & & 269 & 2 & & 138 & 2\\
FreeBSD-Win2008 & & 334 & 1 & & 159 & 1 & & 56 & 1\\ \hline
OpenSolaris-Solaris & 31 & 426 & 27 & 24 & 277 & 22 & 6 & 108 & 6\\
OpenSolaris-Debian & & 213 & 1 & & 65 & 1 & & 28 & 0\\
OpenSolaris-Ubuntu & & 90 & 1 & & 32 & 1 & & 10 & 0\\
OpenSolaris-Red Hat & & 444 & 1 & & 207 & 1 & & 69 & 0\\
OpenSolaris-Win2000 & & 495 & 0 & & 284 & 0 & & 183 & 0\\
OpenSolaris-Win2003 & & 560 & 0 & & 269 & 0 & & 138 & 0\\
OpenSolaris-Win2008 & & 334 & 0 & & 159 & 0 & & 56 & 0\\   \hline
Solaris-Debian & 426 & 213 & 4 & 277 & 65 & 4 & 108 & 28 & 2\\
Solaris-Ubuntu & & 90 & 2 & & 32 & 2 & & 10 & 0\\
Solaris-Red Hat & & 444 & 17 & & 207 & 10 & & 69 & 6\\
Solaris-Win2000 & & 495 & 10 & & 284 & 3 & & 183 & 3\\
Solaris-Win2003 & & 560 & 8 & & 269 & 1 & & 138 & 1\\
Solaris-Win2008 & & 334 & 1 & & 159 & 0 & & 56 & 0\\  \hline
Debian-Ubuntu & 213 & 90 & 15 & 65 & 32 & 6 & 28 & 10 & 2\\
Debian-Red Hat & & 444 & 66 & & 207 & 28 & & 69 & 13\\
Debian-Win2000 & & 495 & 1 & & 284 & 1 & & 183 & 1\\
Debian-Win2003 & & 560 & 1 & & 269 & 1 & & 138 & 1\\
Debian-Win2008 & & 334 & 0 & & 159 & 0 & & 56 & 0\\ \hline
Ubuntu-Red Hat & 90 & 444 & 28 & 32 & 207 & 8 & 10 & 69 & 1\\
Ubuntu-Win2000 & & 495 & 1 & & 284 & 1 & & 183 & 1\\
Ubuntu-Win2003 & & 560 & 1 & & 269 & 1 & & 138 & 1\\
Ubuntu-Win2008 & & 334 & 0 & & 159 & 0 & & 56 & 0\\ \hline
Red Hat-Win2000 & 444 & 495 & 2 & 207 & 284 & 1 & 69 & 183 & 1\\
Red Hat-Win2003 & & 560 & 2 & & 269 & 1 & & 138 & 1\\
Red Hat-Win2008 & & 334 & 0 & & 159 & 0 & & 56 & 0\\  \hline
Win2000-Win2003 & 495 & 560 & 265 & 284 & 269 & 120 & 183 & 138 & 85\\
Win2000-Win2008 & & 334 & 80 & & 159 & 29 & & 56 & 16\\  \hline
Win2003-Win2008 & 560 & 334 & 282 & 269 & 159 & 125 & 138 & 56 & 40\\ \hline
\end{tabular}
}
\caption{Vulnerabilities (1994 to 2011): \emph{Fat Server} - all vulnerabilities; \emph{Thin Server} - no application vulnerabilities; \emph{Isolated Thin Server} - no application vulnerabilities and only remotely-exploitable vulnerabilities. The columns with \textit{v(A)} and \textit{v(B)} show the total number of vulnerabilities collected for \glspl{os} A and B respectively, whereas \textit{v(A,B)} is the count of vulnerabilities that affect both the A and B systems.}
\label{tab:vulns}
\end{center}
\end{table*}



We can also look with more detail at the vulnerabilities that arise in larger sets of \gls{os} releases. 
In order to understand the impact of these vulnerabilities, we will resort to the classification of vulnerabilities by the \gls{cvss} metrics~\cite{cvss}. 
These metrics indicate how difficult is to exploit a flaw and what is the impact of the attack:

\begin{description}	
	\item[Access Complexity] from \emph{Low}: ``Specialized access conditions or extenuating circumstances do not exist'', to \emph{High}: ``Specialized access conditions exist''.
	\item[Availability Impact] from \emph{None}: ``There is no impact to the availability of the system'' to \emph{Complete}: ``There is a total shutdown of the affected resource; The attacker can render the resource completely unavailable''.
	\item[Confidentiality Impact] from \emph{None}: ``There is no impact to the confidentiality of the system'' to \emph{Complete}: ``There is total information disclosure, resulting in all system files being revealed; The attacker is able to read all of the system's data (memory, files, etc.)''.
	\item[Integrity Impact] from \emph{None}: ``There is no impact to the integrity of the system'' to \emph{Complete}: ``There is a total compromise of system integrity; There is a complete loss of system protection, resulting in the entire system being compromised; The attacker is able to modify any files on the target system''.
\end{description}


\begin{table}[!ht]
\begin{center}
{\scriptsize
\begin{tabular}{|l|p{2,5cm}|c|c|c|c|}\cline{4-6}
\multicolumn{3}{c|}{} & \multicolumn{3}{c|}{\textbf{Impact on}} \\ \cline{1-6}
\textbf{CVE} & \textbf{Affected OSes} & \textbf{Access Complexity} & \textbf{Availability} & \textbf{Confidentiality} & \textbf{Integrity} \\ \hline \hline
CVE-2003-0028 & OpenBSD 3.2, Solaris 8.0 and 9.0 & low & partial & partial & partial \\ \hline
CVE-2003-0466 & OpenBSD 2.7 and 3.3, Solaris 9 & low & complete & complete & complete \\ \hline
CVE-2004-0790 & Solaris 8.0, 9.0 and 10.0 & low & partial & none & none \\ \hline
CVE-2004-0791 & Solaris 8.0, 9.0 and 10.0 & low & partial & none & none \\ \hline
CVE-2004-1307 & Solaris 8.0, 9.0 and 10.0 & low & partial & partial & partial \\ \hline
CVE-2005-4797 & Solaris 8.0, 9.0 and 10.0 & low & none & none & partial \\ \hline
CVE-2006-3920 & Solaris 8.0, 9.0 and 10.0 & low & partial & none & none \\ \hline
CVE-2006-5201 & Solaris 8.0, 9.0 and 10.0 & high & partial & none & partial \\ \hline
CVE-2007-6180 & Solaris 8.0, 9.0 and 10.0 & medium & complete & none & complete \\ \hline
CVE-2008-4609 & OpenBSD 3.2, 3.8 and Windows2003 & medium & partial & partial & partial \\ \hline
\end{tabular}
\caption{Impact of vulnerabilities that affect three or more OS releases.}
\label{tab:vulns_impact}
}
\end{center}

\end{table}

Table \ref{tab:vulns_impact} presents the vulnerabilities that affected three or more \gls{os} releases with their respective \gls{cvss} metrics. 
It is reasonable to assume that vulnerabilities with low \emph{Access Complexity} and complete \emph{Impact} are the most critical, since they are easy to exploit and they severely affect one or more security attributes. 
Also relevant are the vulnerabilities with low or medium \emph{Access Complexity} and that have complete \emph{Impact} on at least one security attribute, or partial \emph{Impact} on all attributes. The vulnerabilities in Table~\ref{tab:vulns_impact} that meet these criteria can be summarized as follows:
\begin{itemize}
\item Three vulnerabilities allow arbitrary code execution (CVE-2003-0028, CVE-2003-0466 and CVE-2004-1307);
\item Two vulnerabilities that let denial of service attacks to be performed (CVE-2007-6180 and CVE-2008-4609).
\end{itemize}

These results show that over a large period of time, 12 years, there were only a few vulnerabilities that have a significant impact over the various releases under consideration. 
Moreover, although these security bugs are critical, only three of them affect releases from different families (CVE-2003-0028, CVE-2003-0466 and CVE-2008-4609). 
This indicates that it is possible to build several good sets with only four \glspl{os}, if the right \gls{os} releases are chosen.


